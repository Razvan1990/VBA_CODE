Sub createWhistGenerator()
Dim x As Integer
Dim idxInner As Integer
Dim rowValue As Integer
Dim rowNumber1 As String
Dim rowNumber1Int As Integer
Dim rowNumber2 As String
Dim colNumber1 As String
Dim colNumber1Int As Integer
Dim colNumber2 As String
Dim colTemp As String
Dim idxOffset As Integer
Dim idxRowNumberInt As Integer
Dim ColumnD As String
Dim startingValue As Integer
Dim concatenatedRowNumber As String
Dim concatenatedColumnNumber As String
Dim concatenatedColumnTemp As String


startingValue = 0 ' this is for the starting score
x = InputBox("How many players are playing?", "Whist players", "It has to be 4/5/6 players")
Do While x <> 4 And x <> 5 And x <> 6
    MsgBox ("Not correct number of players")
    x = InputBox("How many players are playing?", "Whist players", "It has to be 4/5/6 players")
    Loop
Call GenerateYesNo
rowValue = Selection.row
'for for 1 games
For idx = 1 To x
    Cells(rowValue, 2) = 1
    rowValue = rowValue + 1
    Cells(rowValue, 2).Select
Next idx
'for from 2 to 7
For idx = 2 To 7
    Cells(rowValue, 2) = idx
    rowValue = rowValue + 1
    Cells(rowValue, 2).Select
Next idx
'for for 8 games
For idx = 1 To x
    Cells(rowValue, 2) = 8
    rowValue = rowValue + 1
    Cells(rowValue, 2).Select
Next idx
'for from 7 to 2
For idx = 7 To 2 Step -1
    Cells(rowValue, 2) = idx
    rowValue = rowValue + 1
    Cells(rowValue, 2).Select
Next idx
'for for 1 games
For idx = 1 To x
    Cells(rowValue, 2) = 1
    Cells(rowValue, 2).Select
    rowValue = rowValue + 1
    'not use here last part cause we want to select range and style it
Next idx
'select the range
rowNumber1 = Selection.Address
rowNumber1Int = Selection.row
rowValue = Cells(rowNumber1Int, 2).End(xlUp).row ' cause b5 is nothing completed
rowNumber2 = Cells(rowValue, 2).Address
concatenatedRowNumber = rowNumber1 & ":" & rowNumber2
Range(concatenatedRowNumber).Select
Call formatNumberGames

'create sub-headers for players
Range("C5").Select
' we will use a for into create our subheaders
For idx = 1 To x
    If idx = x Then ' using this we can easily get the last column
        Selection.value = "Bid"
        Call formatHeadersSmall
        Selection.Offset(0, 1).Select
        Selection.value = "Done?"
        Call formatHeadersSmall
        Selection.Offset(0, 1).Select
        Selection.value = "SCORE"
        Call formatHeadersSmall
    Else:
        Selection.value = "Bid"
        Call formatHeadersSmall
        Selection.Offset(0, 1).Select
        Selection.value = "Done"
        Call formatHeadersSmall
        Selection.Offset(0, 1).Select
        Selection.value = "SCORE"
        Call formatHeadersSmall
        Selection.Offset(0, 1).Select
    End If
Next idx

'Create table for playing

'need to take the last row and last column - rowNumber1 is already know, need just column
'we need to offset this by 1 column for row and 1 row for the column
Selection.Offset(1, 0).Select
columnNumber1 = Selection.Address
Cells(rowNumber1Int, 2).Offset(0, 1).Select
rowNumber1 = Selection.Address
concatenatedColumnNumber = rowNumber1 & ":" & columnNumber1
Range(concatenatedColumnNumber).Select
Call formatInteriorTable

'Make names for players and merge cells
Range("C4").Select
idxOffset = 1
For idx = 1 To x
    'create our range
    colNumber1 = Selection.Address
    Selection.Offset(0, 2).Select
    colNumber2 = Selection.Address
    concatenatedColumnNumber = colNumber1 & ":" & colNumber2
    Range(concatenatedColumnNumber).Merge False
    Range(concatenatedColumnNumber).Select
    Selection.value = "Player" & idx
    Call formatHeadersBig
    Selection.Offset(1, 0).Select
    Selection.Offset(0, 2).Select
    colTemp = Selection.Address
    concatenatedColumnTemp = colTemp & ":" & rowNumber1
    Range(concatenatedColumnTemp).Select
    Call outlinePlayerColumn
    Range("C4").Select
   'we use an interior for to offset all along cause it is not offseting correctly with merge
    For idxInner = 1 To idxOffset
        Selection.Offset(0, 1).Select
    Next idxInner
    idxOffset = idxOffset + 1
Next idx



Columns.EntireColumn.AutoFit

'Call InsertButton
'Call calculateScoreAutomatically(x)
Call calculateFormula
Call removeExtras(x)
Range("A1").Select

End Sub
Sub InsertButton()
'
' InsertButton Macro
'

'
    ActiveSheet.Buttons.Add(865.5, 71.25, 117.75, 45).Select
    Selection.OnAction = "PERSONAL.XLSB!CalcFunction"
    Selection.Characters.Text = "Calculate"
    With Selection.Characters(Start:=1, Length:=9).Font
        .Name = "Calibri"
        .FontStyle = "Regular"
        .Size = 11
        .Strikethrough = False
        .Superscript = False
        .Subscript = False
        .OutlineFont = False
        .Shadow = False
        .Underline = xlUnderlineStyleNone
        .ColorIndex = 1
    End With
    ActiveCell.Select
End Sub








Sub GenerateYesNo()
Range("b4:b5").Merge False
Range("B4").value = "GameNr"
Range("B4").Select
Call formatHeadersBig
Range("B6").Select
End Sub

Sub formatNumberGames()
With Selection.Font
    .Name = "Arial"
    .Size = 12
    .Bold = True
End With
Selection.Interior.Color = vbRed
Selection.HorizontalAlignment = xlCenter
Selection.Borders(xlEdgeTop).LineStyle = xlContinous
Selection.Borders(xlEdgeBottom).LineStyle = xlContinous
Selection.Borders(xlEdgeRight).LineStyle = xlContinous
Selection.Borders(xlEdgeLeft).LineStyle = xlContinous
Selection.Borders(xlEdgeTop).Weight = xlThick
Selection.Borders(xlEdgeBottom).Weight = xlThick
Selection.Borders(xlEdgeRight).Weight = xlThick
Selection.Borders(xlEdgeLeft).Weight = xlThick
Selection.Borders(xlInsideHorizontal).LineStyle = xlDot
Selection.Borders(xlInsideHorizontal).Weight = xlThin
End Sub

Sub formatHeadersBig()
With Selection.Font
    .Name = "Arial"
    .Size = 16
    .Bold = True
    .Italic = True
End With
Selection.HorizontalAlignment = xlCenter
Selection.Interior.ThemeColor = xlThemeColorAccent3
Selection.Borders(xlEdgeTop).LineStyle = xlContinous
Selection.Borders(xlEdgeBottom).LineStyle = xlContinous
Selection.Borders(xlEdgeRight).LineStyle = xlContinous
Selection.Borders(xlEdgeLeft).LineStyle = xlContinous
Selection.Borders(xlEdgeTop).Weight = xlThick
Selection.Borders(xlEdgeBottom).Weight = xlThick
Selection.Borders(xlEdgeRight).Weight = xlThick
Selection.Borders(xlEdgeLeft).Weight = xlThick

End Sub

Sub formatHeadersSmall()
With Selection.Font
    .Name = "Arial"
    .Size = 13
    .Bold = True
End With

Selection.HorizontalAlignment = xlCenter
Selection.Interior.ThemeColor = xlThemeColorAccent1
Selection.Borders(xlEdgeTop).LineStyle = xlContinous
Selection.Borders(xlEdgeBottom).LineStyle = xlContinous
Selection.Borders(xlEdgeRight).LineStyle = xlContinous
Selection.Borders(xlEdgeLeft).LineStyle = xlContinous
Selection.Borders(xlEdgeTop).Weight = xlThick
Selection.Borders(xlEdgeBottom).Weight = xlThick
Selection.Borders(xlEdgeRight).Weight = xlThick
Selection.Borders(xlEdgeLeft).Weight = xlThick
End Sub

Sub formatInteriorTable()
With Selection.Font
    .Name = "Arial"
    .Size = 12
    .Bold = True
End With
Selection.HorizontalAlignment = xlCenter
Selection.Interior.Color = RGB(204, 255, 229)
Selection.Borders(xlEdgeRight).Weight = xlThick
Selection.Borders(xlEdgeRight).LineStyle = xlContinous
Selection.Borders(xlInsideVertical).LineStyle = xlDot
Selection.Borders(xlInsideHorizontal).LineStyle = xlDot
Selection.Borders(xlInsideHorizontal).Weight = xlThin
Selection.Borders(xlEdgeRight).LineStyle = xlContinous
Selection.Borders(xlEdgeBottom).LineStyle = xlContinous
Selection.Borders(xlEdgeBottom).Weight = xlThick
Selection.Borders(xlEdgeRight).Weight = xlThick
End Sub

Sub outlinePlayerColumn()
Selection.Borders(xlEdgeRight).LineStyle = xlContinous
Selection.Borders(xlEdgeRight).Weight = xlThick
End Sub

Sub calculateScoreAutomatically(nrPLayers As Integer)
' we know that we will start at column E at row 6
Dim idxColumn As Integer
Dim idxRow As Integer
Dim cellStart As String
Dim lastRowIndex As Integer
Dim sheet As String
Dim formulaCell As String

'get last row
sheet = ActiveSheet.Name
cellStart = "E6"
Call getLastRow(nrPLayers)
lastRowIndex = Selection.row
Worksheets(sheet).Range(cellStart).Select
For idxColumn = 1 To nrPLayers
    For idxRow = 6 To lastRowIndex
        '= IF(OR(C6="", D6 =""), "", Calculate(B6,D6,C6,E5,C4))
        Selection.value = "=IF(OR(RC[-2] ="""", RC[-1] =""""), """", Calculate(RC[-3], RC[-1], RC[-2], R[-1]C), R4C[-2])"
        'ActiveCell.R1C1 = formulaCell
        Selection.Offset(1, 0).Select
    Next idxRow
    Range(cellStart).Select
    Range(cellStart).Offset(0, 3 * idxColumn).Select
Next idxColumn
        
End Sub



Sub getLastRow(nrPLayers As Integer)
cellStart = "E6"
Select Case nrPLayers
    Case 4
        Range("e29").Select
    Case 5
        Range("E32").Select
    Case 6
        Range("E35").Select
End Select

    
        
        


End Sub


Sub calculateFormula()
'
' calculateFormula Macro
'

   Range("E6").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(OR(RC[-2]="""",RC[-1]=""""),"""",Calculate(RC[-3],RC[-1],RC[-2],R[-1]C,R4C[-2]))"
    ActiveCell.Select
    Selection.AutoFill destination:=Range("e6:e35"), Type:= _
        xlFillDefault
    Range("h6").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(OR(RC[-2]="""",RC[-1]=""""),"""",Calculate(RC[-6],RC[-1],RC[-2],R[-1]C,R4C[-2]))"
    ActiveCell.Select
    Selection.AutoFill destination:=Range("h6:h35"), Type:= _
        xlFillDefault
    Range("k6").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(OR(RC[-2]="""",RC[-1]=""""),"""",Calculate(RC[-9],RC[-1],RC[-2],R[-1]C,R4C[-2]))"
    ActiveCell.Select
    Selection.AutoFill destination:=Range("k6:k35"), Type:= _
        xlFillDefault
    Range("n6").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(OR(RC[-2]="""",RC[-1]=""""),"""",Calculate(RC[-12],RC[-1],RC[-2],R[-1]C,R4C[-2]))"
    ActiveCell.Select
    Selection.AutoFill destination:=Range("n6:n35"), Type:= _
        xlFillDefault
    Range("q6").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(OR(RC[-2]="""",RC[-1]=""""),"""",Calculate(RC[-15],RC[-1],RC[-2],R[-1]C,R4C[-2]))"
    ActiveCell.Select
    Selection.AutoFill destination:=Range("q6:q35"), Type:= _
        xlFillDefault
    Range("t6").Select
    ActiveCell.FormulaR1C1 = _
        "=IF(OR(RC[-2]="""",RC[-1]=""""),"""",Calculate(RC[-18],RC[-1],RC[-2],R[-1]C,R4C[-2]))"
    ActiveCell.Select
    Selection.AutoFill destination:=Range("t6:t35"), Type:= _
        xlFillDefault
   
End Sub

Sub removeExtras(nrPLayers As Integer)

If nrPLayers = 4 Then
    Range("e30:e35").Clear
    Range("h30:h35").Clear
    Range("k30:k35").Clear
    Range("n30:n35").Clear
    Range("e6:e29").Borders(xlEdgeLeft).LineStyle = xlContinous
    Range("e6:e29").Borders(xlEdgeLeft).Weight = xlThick
    Range("e29").Borders(xlEdgeBottom).LineStyle = xlContinous
    Range("e29").Borders(xlEdgeBottom).Weight = xlThick
    Range("h6:h29").Borders(xlEdgeLeft).LineStyle = xlContinous
    Range("h6:h29").Borders(xlEdgeLeft).Weight = xlThick
    Range("h29").Borders(xlEdgeBottom).LineStyle = xlContinous
    Range("h29").Borders(xlEdgeBottom).Weight = xlThick
    Range("k6:k29").Borders(xlEdgeLeft).LineStyle = xlContinous
    Range("k6:k29").Borders(xlEdgeLeft).Weight = xlThick
    Range("k29").Borders(xlEdgeBottom).LineStyle = xlContinous
    Range("k29").Borders(xlEdgeBottom).Weight = xlThick
    Range("n6:n29").Borders(xlEdgeLeft).LineStyle = xlContinous
    Range("n6:n29").Borders(xlEdgeLeft).Weight = xlThick
    Range("n29").Borders(xlEdgeBottom).LineStyle = xlContinous
    Range("n29").Borders(xlEdgeBottom).Weight = xlThick
ElseIf nrPLayers = 5 Then
    Range("e33:e35").Clear
    Range("h33:h35").Clear
    Range("k33:k35").Clear
    Range("n33:n35").Clear
    Range("q33:q35").Clear
    Range("e6:e32").Borders(xlEdgeLeft).LineStyle = xlContinous
    Range("e6:e32").Borders(xlEdgeLeft).Weight = xlThick
    Range("e32").Borders(xlEdgeBottom).LineStyle = xlContinous
    Range("e32").Borders(xlEdgeBottom).Weight = xlThick
    Range("h6:h32").Borders(xlEdgeLeft).LineStyle = xlContinous
    Range("h6:h32").Borders(xlEdgeLeft).Weight = xlThick
    Range("h32").Borders(xlEdgeBottom).LineStyle = xlContinous
    Range("h32").Borders(xlEdgeBottom).Weight = xlThick
    Range("k6:k32").Borders(xlEdgeLeft).LineStyle = xlContinous
    Range("k6:k32").Borders(xlEdgeLeft).Weight = xlThick
    Range("k32").Borders(xlEdgeBottom).LineStyle = xlContinous
    Range("k32").Borders(xlEdgeBottom).Weight = xlThick
    Range("n6:n32").Borders(xlEdgeLeft).LineStyle = xlContinous
    Range("n6:n32").Borders(xlEdgeLeft).Weight = xlThick
    Range("n32").Borders(xlEdgeBottom).LineStyle = xlContinous
    Range("n32").Borders(xlEdgeBottom).Weight = xlThick
    Range("q6:q32").Borders(xlEdgeLeft).LineStyle = xlContinous
    Range("q6:q32").Borders(xlEdgeLeft).Weight = xlThick
    Range("q32").Borders(xlEdgeBottom).LineStyle = xlContinous
    Range("q32").Borders(xlEdgeBottom).Weight = xlThick
    
    
Else
    Range("e6:e35").Borders(xlEdgeLeft).LineStyle = xlContinous
    Range("e6:e35").Borders(xlEdgeLeft).Weight = xlThick
    Range("h6:h35").Borders(xlEdgeLeft).LineStyle = xlContinous
    Range("h6:h35").Borders(xlEdgeLeft).Weight = xlThick
    Range("k6:k35").Borders(xlEdgeLeft).LineStyle = xlContinous
    Range("k6:k35").Borders(xlEdgeLeft).Weight = xlThick
    Range("n6:n35").Borders(xlEdgeLeft).LineStyle = xlContinous
    Range("n6:n35").Borders(xlEdgeLeft).Weight = xlThick
    Range("q6:q35").Borders(xlEdgeLeft).LineStyle = xlContinous
    Range("q6:q35").Borders(xlEdgeLeft).Weight = xlThick
    Range("t6:t35").Borders(xlEdgeLeft).LineStyle = xlContinous
    Range("t6:t35").Borders(xlEdgeLeft).Weight = xlThick
    Range("e35").Borders(xlEdgeBottom).LineStyle = xlContinous
    Range("e35").Borders(xlEdgeBottom).Weight = xlThick
    Range("h35").Borders(xlEdgeBottom).LineStyle = xlContinous
    Range("h35").Borders(xlEdgeBottom).Weight = xlThick
    Range("k35").Borders(xlEdgeBottom).LineStyle = xlContinous
    Range("k35").Borders(xlEdgeBottom).Weight = xlThick
    Range("n35").Borders(xlEdgeBottom).LineStyle = xlContinous
    Range("n35").Borders(xlEdgeBottom).Weight = xlThick
    Range("q35").Borders(xlEdgeBottom).LineStyle = xlContinous
    Range("q35").Borders(xlEdgeBottom).Weight = xlThick
    Range("t35").Borders(xlEdgeBottom).LineStyle = xlContinous
    Range("t35").Borders(xlEdgeBottom).Weight = xlThick
    

End If
End Sub






